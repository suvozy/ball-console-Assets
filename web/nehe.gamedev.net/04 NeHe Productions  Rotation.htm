<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" dir="ltr" xml:lang="en" lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <title>NeHe Productions: Rotation</title>

    <link rel="stylesheet" type="text/css" href="04%20NeHe%20Productions%20%20Rotation_files/public_base.css">
    <link type="text/css" rel="stylesheet" href="04%20NeHe%20Productions%20%20Rotation_files/shThemeMidnight.css">
    
    <link rel="alternate" type="application/atom+xml" title="Atom feed" href="http://nehe.gamedev.net/atom/">
    <link rel="alternate" type="application/rss+xml" title="RSS feed" href="http://nehe.gamedev.net/rss/">
    
    <meta name="author" content="Luke Benstead + Carsten Haubold">
    <meta name="description" content="OpenGL Tutorials, Demos, Games and More...">
    <meta name="keywords" content="opengl, tutorial, article, demo, game, blend, texturemap, lighting, contest, 3D">

    
    

    




    
    
    
    
        
        <script type="text/javascript" src="04%20NeHe%20Productions%20%20Rotation_files/google_service.js"></script>
        <script type="text/javascript">
        GS_googleAddAdSenseService("ca-pub-3167291168602081");    
        GS_googleEnableAllServices();
        </script><script src="04%20NeHe%20Productions%20%20Rotation_files/google_ads.js"></script>

        <script type="text/javascript">
        GA_googleAddSlot("ca-pub-3167291168602081", "Leaderboard_NeHe");
        GA_googleAddSlot("ca-pub-3167291168602081", "Skyscraper_NeHe");
        </script>
        <script type="text/javascript">
        GA_googleFetchAds();
        </script>
    
    

    
  </head>

  <body>
    <table id="layout_table" border="0" cellpadding="0" cellspacing="0">
    <tbody><tr><td>
        <div id="header">
                <a href="http://nehe.gamedev.net/"><img class="logo" src="04%20NeHe%20Productions%20%20Rotation_files/nehe.png" alt="Nehe" border="0"></a>
        </div>            
    </td></tr>
    <tr><td colspan="2">
            
<div class="navbar">
    <a href="http://nehe.gamedev.net/">HOME</a>
</div>
    
    </td></tr>
    <tr>
        <td class="col1">

            
<div id="article_container">
<h1>Rotation</h1>
<p>In the last tutorial I taught you how to add color to triangles and 
quads. In this tutorial I will teach you how to rotate these colored 
objects around an axis.</p>
<p>Using the code from the last tutorial, we will be adding to a few 
places in the code. I will rewrite the entire section of code below so 
it's easy for you to figure out what's been added, and what needs to be 
replaced.</p>
<p>We'll start off by adding the two variables to keep track of the 
rotation for each object. We do this at the top of our program, 
underneath the other variables. You will notice two new lines after 
'bool fullscreen=TRUE;'. These lines set up two floating point variables
 that we can use to spin the objects with very fine accuracy. Floating 
point allows decimal numbers. Meaning we're not stuck using 1, 2, 3 for 
the angle, we can use 1.1, 1.7, 2.3, or even 1.015 for fine accuracy. 
You will find that floating point numbers are essential to OpenGL 
programming. The new variables are called rtri which will rotate the 
triangle and rquad which will rotate the quad.</p>
<div><div id="highlighter_533019" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp preprocessor">#include&nbsp;&nbsp;&nbsp;
 
&lt;windows.h&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 // Header File For Windows</code></div><div class="line number2 index1 alt1"><code class="cpp preprocessor">#include&nbsp;&nbsp;&nbsp;
 
&lt;gl\gl.h&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 // Header File For The OpenGL32 Library</code></div><div class="line number3 index2 alt2"><code class="cpp preprocessor">#include&nbsp;&nbsp;&nbsp;
 
&lt;gl\glu.h&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 // Header File For The GLu32 Library</code></div><div class="line number4 index3 alt1"><code class="cpp preprocessor">#include&nbsp;&nbsp;&nbsp;
 
&lt;gl\glaux.h&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 // Header File For The GLaux Library</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="cpp color1 bold">HDC</code>&nbsp;&nbsp;&nbsp;&nbsp; <code class="cpp plain">hDC=NULL;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Private GDI Device Context</code></div><div class="line number7 index6 alt2"><code class="cpp plain">HGLRC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 
hRC=NULL;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 </code><code class="cpp comments">// Permanent Rendering Context</code></div><div class="line number8 index7 alt1"><code class="cpp color1 bold">HWND</code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <code class="cpp plain">hWnd=NULL;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Holds Our Window Handle</code></div><div class="line number9 index8 alt2"><code class="cpp color1 bold">HINSTANCE</code>&nbsp;&nbsp; <code class="cpp plain">hInstance;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Holds The Instance Of The Application</code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="cpp color1 bold">bool</code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <code class="cpp plain">keys[256];&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Array Used For The Keyboard Routine</code></div><div class="line number12 index11 alt1"><code class="cpp color1 bold">bool</code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <code class="cpp plain">active=TRUE;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Window Active Flag</code></div><div class="line number13 index12 alt2"><code class="cpp color1 bold">bool</code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <code class="cpp plain">fullscreen=TRUE;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Fullscreen Flag Set To TRUE By Default</code></div><div class="line number14 index13 alt1">&nbsp;</div><div class="line number15 index14 alt2"><code class="cpp plain">GLfloat&nbsp;&nbsp;&nbsp;&nbsp;
 
rtri;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 </code><code class="cpp comments">// Angle For The Triangle ( NEW )</code></div><div class="line number16 index15 alt1"><code class="cpp plain">GLfloat&nbsp;&nbsp;&nbsp;&nbsp;
 
rquad;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 </code><code class="cpp comments">// Angle For The Quad&nbsp;&nbsp;&nbsp;&nbsp; ( NEW )</code></div></div></td></tr></tbody></table></div></div>
<p>Now we need to modify the DrawGLScene() code. I will rewrite the 
entire procedure. This should make it easier for you to see what changes
 I have made to the original code. I'll explain why lines have been 
modified, and what exactly it is that the new lines do. The next section
 of code is exactly the same as in the last tutorial.</p>
<div><div id="highlighter_23251" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">DrawGLScene(GLvoid)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 </code><code class="cpp comments">// Here's Where We Do All The Drawing</code></div><div class="line number2 index1 alt1"><code class="cpp plain">{</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); </code><code class="cpp comments">// Clear The Screen And The Depth Buffer</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">glLoadIdentity();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Reset The View</code></div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">glTranslatef(-1.5f,0.0f,-6.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Move Into The Screen And Left</code></div></div></td></tr></tbody></table></div></div>
<p>The next line of code is new. 
glRotatef(Angle,Xvector,Yvector,Zvector) is responsible for rotating the
 object around an axis. You will get alot of use out of this command. 
Angle is some number (usually stored in a variable) that represents how 
much you would like to spin the object. Xvector, Yvector and Zvector 
parameters together represent the vector about which the rotation will 
occur. If you use values (1,0,0), you are describing a vector which 
travels in a direction of 1 unit along the x axis towards the right. 
Values (-1,0,0) describes a vector that travels in a direction of 1 unit
 along the x axis, but this time towards the left.</p>
<p>D. Michael Traub: has supplied the above explanation of the Xvector, Yvector and Zvector parameters.</p>
<p>To better understand X, Y and Z rotation I'll explain using examples...</p>
<p>X Axis - You're working on a table saw. The bar going through the 
center of the blade runs left to right (just like the x axis in OpenGL).
 The sharp teeth spin around the x axis (bar running through the center 
of the blade), and appear to be cutting towards or away from you 
depending on which way the blade is being spun. When we spin something 
on the x axis in OpenGL it will spin the same way.</p>
<p>Y Axis - Imagine that you are standing in the middle of a field. 
There is a huge tornado coming straight at you. The center of a tornado 
runs from the sky to the ground (up and down, just like the y axis in 
OpenGL). The dirt and debris in the tornado spins around the y axis 
(center of the tornado) from left to right or right to left. When you 
spin something on the y axis in OpenGL it will spin the same way.</p>
<p>Z Axis - You are looking at the front of a fan. The center of the fan
 points towards you and away from you (just like the z axis in OpenGL). 
The blades of the fan spin around the z axis (center of the fan) in a 
clockwise or counterclockwise direction. When You spin something on the z
 axis in OpenGL it will spin the same way.</p>
<p>So in the following line of code, if rtri was equal to 7, we would 
spin 7 on the Y axis (left to right). You can try experimenting with the
 code. Change the 0.0f's to 1.0f's, and the 1.0f to a 0.0f to spin the 
triangle on the X and Y axes at the same time.</p>
<p>It's important to note that rotations are done in degrees. If rtri 
had a value of 10, we would be rotating 10 degrees on the y-axis.</p>
<div><div id="highlighter_81190" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">glRotatef(rtri,0.0f,1.0f,0.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Rotate The Triangle On The Y axis ( NEW )</code></div></div></td></tr></tbody></table></div></div>
<p>The next section of code has not changed. It draws a colorful smooth 
blended triangle. The triangle will be drawn on the left side of the 
screen, and will be rotated on it's Y axis causing it to spin left to 
right.</p>
<div><div id="highlighter_79184" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">glBegin(GL_TRIANGLES);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Start Drawing A Triangle</code></div><div class="line number2 index1 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">glColor3f(1.0f,0.0f,0.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Set Top Point Of Triangle To Red</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">glVertex3f( 0.0f, 1.0f, 0.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// First Point Of The Triangle</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">glColor3f(0.0f,1.0f,0.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Set Left Point Of Triangle To Green</code></div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">glVertex3f(-1.0f,-1.0f, 0.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Second Point Of The Triangle</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">glColor3f(0.0f,0.0f,1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Set Right Point Of Triangle To Blue</code></div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">glVertex3f( 1.0f,-1.0f, 0.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Third Point Of The Triangle</code></div><div class="line number8 index7 alt1"><code class="cpp plain">glEnd();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 </code><code class="cpp comments">// Done Drawing The Triangle</code></div></div></td></tr></tbody></table></div></div>
<p>You'll notice in the code below, that we've added another 
glLoadIdentity(). We do this to reset the view. If we didn't reset the 
view. If we translated after the object had been rotated, you would get 
very unexpected results. Because the axis has been rotated, it may not 
be pointing in the direction you think. So if we translate left on the X
 axis, we may end up moving up or down instead, depending on how much 
we've rotated on each axis. Try taking the glLoadIdentity() line out to 
see what I mean.</p>
<p>Once the scene has been reset, so X is running left to right, Y up 
and down, and Z in and out, we translate. You'll notice we're only 
moving 1.5 to the right instead of 3.0 like we did in the last lesson. 
When we reset the screen, our focus moves to the center of the screen. 
meaning we're no longer 1.5 units to the left, we're back at 0.0. So to 
get to 1.5 on the right side of zero we dont have to move 1.5 from left 
to center then 1.5 to the right (total of 3.0) we only have to move from
 center to the right which is just 1.5 units.</p>
<p>After we have moved to our new location on the right side of the 
screen, we rotate the quad, on the X axis. This will cause the square to
 spin up and down.</p>
<div><div id="highlighter_684668" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">glLoadIdentity();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Reset The Current Modelview Matrix</code></div><div class="line number2 index1 alt1"><code class="cpp plain">glTranslatef(1.5f,0.0f,-6.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Move Right 1.5 Units And Into The Screen 6.0</code></div><div class="line number3 index2 alt2"><code class="cpp plain">glRotatef(rquad,1.0f,0.0f,0.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Rotate The Quad On The X axis ( NEW )</code></div></div></td></tr></tbody></table></div></div>
<p>This section of code remains the same. It draws a blue square made 
from one quad. It will draw the square on the right side of the screen 
in it's rotated position.</p>
<div><div id="highlighter_183761" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">glColor3f(0.5f,0.5f,1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Set The Color To A Nice Blue Shade</code></div><div class="line number2 index1 alt1"><code class="cpp plain">glBegin(GL_QUADS);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Start Drawing A Quad</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">glVertex3f(-1.0f, 1.0f, 0.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Top Left Of The Quad</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">glVertex3f( 1.0f, 1.0f, 0.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Top Right Of The Quad</code></div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">glVertex3f( 1.0f,-1.0f, 0.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Bottom Right Of The Quad</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">glVertex3f(-1.0f,-1.0f, 0.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Bottom Left Of The Quad</code></div><div class="line number7 index6 alt2"><code class="cpp plain">glEnd();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 </code><code class="cpp comments">// Done Drawing The Quad</code></div></div></td></tr></tbody></table></div></div>
<p>The next two lines are new. Think of rtri, and rquad as containers. 
At the top of our program we made the containers (GLfloat rtri, and 
GLfloat rquad). When we built the containers they had nothing in them. 
The first line below ADDS 0.2 to that container. So each time we check 
the value in the rtri container after this section of code, it will have
 gone up by 0.2. The rquad container decreases by 0.15. So every time we
 check the rquad container, it will have gone down by 0.15. Going down 
will cause the object to spin the opposite direction it would spin if 
you were going up.</p>
<p>Try chaning the + to a - in the line below see how the object spins 
the other direction. Try changing the values from 0.2 to 1.0. The higher
 the number, the faster the object will spin. The lower the number, the 
slower it will spin.</p>
<div><div id="highlighter_610643" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">rtri+=0.2f;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 </code><code class="cpp comments">// Increase The Rotation Variable For The Triangle ( NEW )</code></div><div class="line number2 index1 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">rquad-=0.15f;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 </code><code class="cpp comments">// Decrease The Rotation Variable For The Quad&nbsp;&nbsp;&nbsp;&nbsp; ( NEW )</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">TRUE;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 </code><code class="cpp comments">// Keep Going</code></div><div class="line number4 index3 alt1"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>Finally change the code to toggle window / fullscreen mode so that the title at the top of the window is proper.</p>
<div><div id="highlighter_16585" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">if</code> <code class="cpp plain">(keys[VK_F1])&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Is F1 Being Pressed?</code></div><div class="line number2 index1 alt1"><code class="cpp plain">{</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">keys[VK_F1]=FALSE;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// If So Make Key FALSE</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">KillGLWindow();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Kill Our Current Window</code></div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">fullscreen=!fullscreen;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Toggle Fullscreen / Windowed Mode</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Recreate Our OpenGL Window ( Modified )</code></div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(!CreateGLWindow(</code><code class="cpp string">"NeHe's Rotation Tutorial"</code><code class="cpp plain">,640,480,16,fullscreen))</code></div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Quit If Window Was Not Created</code></div><div class="line number10 index9 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number11 index10 alt2"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>In this tutorial I have tried to explain in as much detail as 
possible, how to rotate objects around an axis. Play around with the 
code, try spinning the objects, on the Z axis, the X &amp; Y, or all 
three :) If you have comments or questions please email me. If you feel I
 have incorrectly commented something or that the code could be done 
better in some sections, please let me know. I want to make the best 
OpenGL tutorials I can. I'm interested in hearing your feedback.</p>
<p><strong>Jeff Molofee</strong> (<strong>NeHe</strong>)</p>
<p>* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/vc/lesson04.zip">Visual C++</a> Code For This Lesson.</p>
<p>* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/asm/lesson04.zip">ASM</a> Code For This Lesson. ( Conversion by Foolman )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/bcb6/lesson04_bcb6.zip">Borland C++ Builder 6</a> Code For This Lesson. ( Conversion by Christian Kindahl )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/beos/lesson04.zip">BeOS</a> Code For This Lesson. ( Conversion by Rene Manqueros )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/c_sharp/lesson04.zip">C#</a> Code For This Lesson. ( Conversion by Sabine Felsinger )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/csgl/lesson04.zip">VB.Net CsGL</a> Code For This Lesson. ( Conversion by X )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/cwarrior/lesson04.zip">Code Warrior 5.3</a> Code For This Lesson. ( Conversion by Scott Lupton )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/cygwin/lesson04.tar.gz">Cygwin</a> Code For This Lesson. ( Conversion by Stephan Ferraro )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/d/lesson04.zip">D Language</a> Code For This Lesson. ( Conversion by Familia Pineda Garcia )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/delphi/lesson04.zip">Delphi</a> Code For This Lesson. ( Conversion by Michal Tucek )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/devc/lesson04.zip">Dev C++</a> Code For This Lesson. ( Conversion by Dan )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/euphoria/lesson04.zip">Euphoria</a> Code For This Lesson. ( Conversion by Evan Marshall )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/game/data/lessons/glut/lesson04.zip">Game GLUT</a> Code For This Lesson. ( Conversion by Milikas Anastasios )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/genu/lesson04.zip">Genu</a> Code For This Lesson. ( Conversion by Louis-Charles Dumais )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/glut/lesson04.zip">GLUT</a> Code For This Lesson. ( Conversion by Andy Restad )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/irix/lesson04.zip">Irix</a> Code For This Lesson. ( Conversion by Lakmal Gunasekara )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/java/lesson04.zip">Java</a> Code For This Lesson. ( Conversion by Jeff Kirby )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/java_swt/lesson04.zip">Java/SWT</a> Code For This Lesson. ( Conversion by Victor Gonzalez )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/jedisdl/lesson04.zip">Jedi-SDL</a> Code For This Lesson. ( Conversion by Dominique Louis )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/jogl/lesson04.jar">JoGL</a> Code For This Lesson. ( Conversion by Kevin J. Duling )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/lccwin32/lccwin32_lesson04.zip">LCC Win32</a> Code For This Lesson. ( Conversion by Robert Wishlaw )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/linux/lesson04.tar.gz">Linux</a> Code For This Lesson. ( Conversion by Richard Campbell )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/linuxglx/lesson04.tar.gz">Linux/GLX</a> Code For This Lesson. ( Conversion by Mihael Vrbanec )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/linuxsdl/lesson04.tar.gz">Linux/SDL</a> Code For This Lesson. ( Conversion by Ti Leggett )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/lwjgl/lesson04.jar">LWJGL</a> Code For This Lesson. ( Conversion by Mark Bernard )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/mac/lesson04.sit">Mac OS</a> Code For This Lesson. ( Conversion by Anthony Parker )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/macosxcocoa/lesson04.zip">Mac OS X/Cocoa</a> Code For This Lesson. ( Conversion by Bryan Blackburn )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/m/data/lessons/asm/lesson04.zip">MASM</a> Code For This Lesson. ( Conversion by Nico (Scalp) )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/pbasic/lesson04.zip">Power Basic</a> Code For This Lesson. ( Conversion by Angus Law )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/pelles_c/lesson04.zip">Pelles C</a> Code For This Lesson. ( Conversion by Pelle Orinius )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/perl/lesson04.zip">Perl</a> Code For This Lesson. ( Conversion by Cora Hussey )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/python/lesson04.tar.gz">Python</a> Code For This Lesson. ( Conversion by John Ferguson )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/realbasic/RBlesson04.zip">REALbasic</a> Code For This Lesson. ( Conversion by Thomas J. Cunningham )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/ruby/lesson04.zip">Ruby</a> Code For This Lesson. ( Conversion by Manolo Padron Martinez )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/scheme/lesson04.zip">Scheme</a> Code For This Lesson. ( Conversion by Jon DuBois )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/solaris/lesson04.zip">Solaris</a> Code For This Lesson. ( Conversion by Lakmal Gunasekara )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/vb/lesson04.zip">Visual Basic</a> Code For This Lesson. ( Conversion by Ross Dawson )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/vfortran/lesson04.zip">Visual Fortran</a> Code For This Lesson. ( Conversion by Jean-Philippe Perois )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/vs_net/lesson04.zip">Visual Studio .NET</a> Code For This Lesson. ( Conversion by Grant James )</p>
<p>&nbsp;</p>
<p><strong><span><a href="http://nehe.gamedev.net/data/lessons/lesson.asp?lesson=03">&lt; Lesson 03</a></span></strong><strong><span><a href="http://nehe.gamedev.net/data/lessons/lesson.asp?lesson=05">Lesson 05 &gt;</a></span></strong></p>


</div>



            <div style="width:728px;padding:0px;margin:auto; margin-top: 10px;">
                <script type="text/javascript">GA_googleFillSlot("Leaderboard_NeHe");</script><script src="04%20NeHe%20Productions%20%20Rotation_files/ads_002"></script><div id="google_ads_div_Leaderboard_NeHe_ad_container">
<ins style="width: 728px; height: 90px; display: inline-table; position: relative; border: 0pt none;"><ins style="width: 728px; height: 90px; display: block; position: relative; border: 0pt none;"><iframe style="border: 0pt none; position: absolute; top: 0pt; left: 0pt;" marginheight="0" marginwidth="0" name="google_ads_iframe_Leaderboard_NeHe" id="google_ads_iframe_Leaderboard_NeHe" frameborder="0" height="90" scrolling="no" width="728"></iframe></ins></ins></div>
<script>GA_googleCreateDomIframe("google_ads_div_Leaderboard_NeHe_ad_container" ,"Leaderboard_NeHe");</script>
            </div>              
        </td>
        <td class="col2">
            




<div style="text-align: center; padding:10px;">


<script type="text/javascript">
    GA_googleFillSlot("Skyscraper_NeHe");
</script><script src="04%20NeHe%20Productions%20%20Rotation_files/ads"></script><div id="google_ads_div_Skyscraper_NeHe_ad_container"><script type="text/javascript"><!--
  amazon_ad_tag = "gamedev";  amazon_ad_width = "160";  amazon_ad_height = "600";//--></script>
<script type="text/javascript" src="04%20NeHe%20Productions%20%20Rotation_files/ads.js"></script><script src="04%20NeHe%20Productions%20%20Rotation_files/ads-common.js" type="text/javascript"></script><iframe src="04%20NeHe%20Productions%20%20Rotation_files/cm.htm" marginwidth="0" marginheight="0" border="0" style="border: medium none;" frameborder="0" height="600" scrolling="no" width="160"></iframe>

</div>


</div>

        </td>
    </tr></tbody></table>
    <div id="footer">
        <p>
			© 1997-2011 <a href="http://www.gamedev.net/">Gamedev.net</a>. All rights reserved.<br>
			NeHe TM and NeHe ProductionsTM are trademarks of GameDev.net, LLC<br>
			OpenGL® is a registered trademark of Silicon Graphics Inc.<br>
		</p>        
    </div>

    
	    <script type="text/javascript" src="04%20NeHe%20Productions%20%20Rotation_files/shCore.js"></script>
        <script type="text/javascript" src="04%20NeHe%20Productions%20%20Rotation_files/shBrushCpp.js"></script>
	    <script type="text/javascript" src="04%20NeHe%20Productions%20%20Rotation_files/shBrushJScript.js"></script>
	    <script type="text/javascript">SyntaxHighlighter.all();</script>
    
    
<!-- GoogleAnalytics code -->
<script src="04%20NeHe%20Productions%20%20Rotation_files/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-279474-2"; // Gamedev
urchinTracker();
_uff = 0; // Reset for second account
_uacct = "UA-24180731-1"; // Non-GD
urchinTracker();
</script> 
  

</body></html>