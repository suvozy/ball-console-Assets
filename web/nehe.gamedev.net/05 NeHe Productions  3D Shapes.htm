<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" dir="ltr" xml:lang="en" lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <title>NeHe Productions: 3D Shapes</title>

    <link rel="stylesheet" type="text/css" href="05%20NeHe%20Productions%20%203D%20Shapes_files/public_base.css">
    <link type="text/css" rel="stylesheet" href="05%20NeHe%20Productions%20%203D%20Shapes_files/shThemeMidnight.css">
    
    <link rel="alternate" type="application/atom+xml" title="Atom feed" href="http://nehe.gamedev.net/atom/">
    <link rel="alternate" type="application/rss+xml" title="RSS feed" href="http://nehe.gamedev.net/rss/">
    
    <meta name="author" content="Luke Benstead + Carsten Haubold">
    <meta name="description" content="OpenGL Tutorials, Demos, Games and More...">
    <meta name="keywords" content="opengl, tutorial, article, demo, game, blend, texturemap, lighting, contest, 3D">

    
    

    




    
    
    
    
        
        <script type="text/javascript" src="05%20NeHe%20Productions%20%203D%20Shapes_files/google_service.js"></script>
        <script type="text/javascript">
        GS_googleAddAdSenseService("ca-pub-3167291168602081");    
        GS_googleEnableAllServices();
        </script><script src="05%20NeHe%20Productions%20%203D%20Shapes_files/google_ads.js"></script>

        <script type="text/javascript">
        GA_googleAddSlot("ca-pub-3167291168602081", "Leaderboard_NeHe");
        GA_googleAddSlot("ca-pub-3167291168602081", "Skyscraper_NeHe");
        </script>
        <script type="text/javascript">
        GA_googleFetchAds();
        </script>
    
    

    
  </head>

  <body>
    <table id="layout_table" border="0" cellpadding="0" cellspacing="0">
    <tbody><tr><td>
        <div id="header">
                <a href="http://nehe.gamedev.net/"><img class="logo" src="05%20NeHe%20Productions%20%203D%20Shapes_files/nehe.png" alt="Nehe" border="0"></a>
        </div>            
    </td></tr>
    <tr><td colspan="2">
            
<div class="navbar">
    <a href="http://nehe.gamedev.net/">HOME</a>
</div>
    
    </td></tr>
    <tr>
        <td class="col1">

            
<div id="article_container">
<h1>3D Shapes</h1>
<p>Expanding on the last tutorial, we'll now make the object into TRUE 
3D object, rather than 2D objects in a 3D world. We will do this by 
adding a left, back, and right side to the triangle, and a left, right, 
back, top and bottom to the square. By doing this, we turn the triangle 
into a pyramid, and the square into a cube.</p>
<p>We'll blend the colors on the pyramid, creating a smoothly colored 
object, and for the square we'll color each face a different color.</p>
<div><div id="highlighter_117461" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">DrawGLScene(GLvoid)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 </code><code class="cpp comments">// Here's Where We Do All The Drawing</code></div><div class="line number2 index1 alt1"><code class="cpp plain">{</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); </code><code class="cpp comments">// Clear The Screen And The Depth Buffer</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">glLoadIdentity();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Reset The View</code></div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">glTranslatef(-1.5f,0.0f,-6.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Move Left And Into The Screen</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">glRotatef(rtri,0.0f,1.0f,0.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Rotate The Pyramid On It's Y Axis</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">glBegin(GL_TRIANGLES);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Start Drawing The Pyramid</code></div></div></td></tr></tbody></table></div></div>
<p>A few of you have taken the code from the last tutorial, and made 3D 
objects of your own. One thing I've been asked quite a bit is "how come 
my objects are not spinning on their axis? It seems like they are 
spinning all over the screen". In order for your object to spin around 
an axis, it has to be designed AROUND that axis. You have to remember 
that the center of any object should be 0 on the X, 0 on the Y, and 0 on
 the Z.</p>
<p>The following code will create the pyramid around a central axis. The
 top of the pyramid is one high from the center, the bottom of the 
pyramid is one down from the center. The top point is right in the 
middle (zero), and the bottom points are one left from center, and one 
right from center.</p>
<p>Note that all triangles are drawn in a counterclockwise rotation. 
This is important, and will be explained in a future tutorial, for now, 
just know that it's good practice to make objects either clockwise or 
counterclockwise, but you shouldn't mix the two unless you have a reason
 to.</p>
<p>We start off by drawing the Front Face. Because all of the faces 
share the top point, we will make this point red on all of the 
triangles. The color on the bottom two points of the triangles will 
alternate. The front face will have a green left point and a blue right 
point. Then the triangle on the right side will have a blue left point 
and a green right point. By alternating the bottom two colors on each 
face, we make a common colored point at the bottom of each face.</p>
<div><div id="highlighter_540035" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">glColor3f(1.0f,0.0f,0.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Red</code></div><div class="line number2 index1 alt1"><code class="cpp plain">glVertex3f( 0.0f, 1.0f, 0.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Top Of Triangle (Front)</code></div><div class="line number3 index2 alt2"><code class="cpp plain">glColor3f(0.0f,1.0f,0.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Green</code></div><div class="line number4 index3 alt1"><code class="cpp plain">glVertex3f(-1.0f,-1.0f, 1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Left Of Triangle (Front)</code></div><div class="line number5 index4 alt2"><code class="cpp plain">glColor3f(0.0f,0.0f,1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Blue</code></div><div class="line number6 index5 alt1"><code class="cpp plain">glVertex3f( 1.0f,-1.0f, 1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Right Of Triangle (Front)</code></div></div></td></tr></tbody></table></div></div>
<p>Now we draw the right face. Notice then the two bottom point are 
drawn one to the right of center, and the top point is drawn one up on 
the y axis, and right in the middle of the x axis. causing the face to 
slope from center point at the top out to the right side of the screen 
at the bottom.</p>
<p>Notice the left point is drawn blue this time. By drawing it blue, it
 will be the same color as the right bottom corner of the front face. 
Blending blue outwards from that one corner across both the front and 
right face of the pyramid.</p>
<p>Notice how the remaining three faces are included inside the same 
glBegin(GL_TRIANGLES) and glEnd() as the first face. Because we're 
making this entire object out of triangles, OpenGL will know that every 
three points we plot are the three points of a triangle. Once it's drawn
 three points, if there are three more points, it will assume another 
triangle needs to be drawn. If you were to put four points instead of 
three, OpenGL would draw the first three and assume the fourth point is 
the start of a new triangle. It would not draw a Quad. So make sure you 
don't add any extra points by accident.</p>
<div><div id="highlighter_494631" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">glColor3f(1.0f,0.0f,0.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Red</code></div><div class="line number2 index1 alt1"><code class="cpp plain">glVertex3f( 0.0f, 1.0f, 0.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Top Of Triangle (Right)</code></div><div class="line number3 index2 alt2"><code class="cpp plain">glColor3f(0.0f,0.0f,1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Blue</code></div><div class="line number4 index3 alt1"><code class="cpp plain">glVertex3f( 1.0f,-1.0f, 1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Left Of Triangle (Right)</code></div><div class="line number5 index4 alt2"><code class="cpp plain">glColor3f(0.0f,1.0f,0.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Green</code></div><div class="line number6 index5 alt1"><code class="cpp plain">glVertex3f( 1.0f,-1.0f, -1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Right Of Triangle (Right)</code></div></div></td></tr></tbody></table></div></div>
<p>Now for the back face. Again the colors switch. The left point is now
 green again, because the corner it shares with the right face is green.</p>
<div><div id="highlighter_439339" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">glColor3f(1.0f,0.0f,0.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Red</code></div><div class="line number2 index1 alt1"><code class="cpp plain">glVertex3f( 0.0f, 1.0f, 0.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Top Of Triangle (Back)</code></div><div class="line number3 index2 alt2"><code class="cpp plain">glColor3f(0.0f,1.0f,0.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Green</code></div><div class="line number4 index3 alt1"><code class="cpp plain">glVertex3f( 1.0f,-1.0f, -1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Left Of Triangle (Back)</code></div><div class="line number5 index4 alt2"><code class="cpp plain">glColor3f(0.0f,0.0f,1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Blue</code></div><div class="line number6 index5 alt1"><code class="cpp plain">glVertex3f(-1.0f,-1.0f, -1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Right Of Triangle (Back)</code></div></div></td></tr></tbody></table></div></div>
<p>Finally we draw the left face. The colors switch one last time. The 
left point is blue, and blends with the right point of the back face. 
The right point is green, and blends with the left point of the front 
face.</p>
<p>We're done drawing the pyramid. Because the pyramid only spins on the
 Y axis, we will never see the bottom, so there is no need to put a 
bottom on the pyramid. If you feel like experimenting, try adding a 
bottom using a quad, then rotate on the X axis to see if you've done it 
correctly. Make sure the color used on each corner of the quad matches 
up with the colors being used at the four corners of the pyramid.</p>
<div><div id="highlighter_894165" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">glColor3f(1.0f,0.0f,0.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Red</code></div><div class="line number2 index1 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">glVertex3f( 0.0f, 1.0f, 0.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Top Of Triangle (Left)</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">glColor3f(0.0f,0.0f,1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Blue</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">glVertex3f(-1.0f,-1.0f,-1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Left Of Triangle (Left)</code></div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">glColor3f(0.0f,1.0f,0.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Green</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">glVertex3f(-1.0f,-1.0f, 1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Right Of Triangle (Left)</code></div><div class="line number7 index6 alt2"><code class="cpp plain">glEnd();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 </code><code class="cpp comments">// Done Drawing The Pyramid</code></div></div></td></tr></tbody></table></div></div>
<p>Now we'll draw the cube. It's made up of six quads. All of the quads 
are drawn in a counter clockwise order. Meaning the first point is the 
top right, the second point is the top left, third point is bottom left,
 and finally bottom right. When we draw the back face, it may seem as 
though we are drawing clockwise, but you have to keep in mind that if we
 were behind the cube looking at the front of it, the left side of the 
screen is actually the right side of the quad, and the right side of the
 screen would actually be the left side of the quad.</p>
<p>Notice we move the cube a little further into the screen in this 
lesson. By doing this, the size of the cube appears closer to the size 
of the pyramid. If you were to move it only 6 units into the screen, the
 cube would appear much larger than the pyramid, and parts of it might 
get cut off by the sides of the screen. You can play around with this 
setting, and see how moving the cube further into the screen makes it 
appear smaller, and moving it closer makes it appear larger. The reason 
this happens is perspective. Objects in the distance should appear 
smaller :)</p>
<div><div id="highlighter_818595" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">glLoadIdentity();</code></div><div class="line number2 index1 alt1"><code class="cpp plain">glTranslatef(1.5f,0.0f,-7.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Move Right And Into The Screen</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="cpp plain">glRotatef(rquad,1.0f,1.0f,1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Rotate The Cube On X, Y &amp; Z</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="cpp plain">glBegin(GL_QUADS);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Start Drawing The Cube</code></div></div></td></tr></tbody></table></div></div>
<p>We'll start off by drawing the top of the cube. We move up one unit 
from the center of the cube. Notice that the Y axis is always one. We 
then draw a quad on the Z plane. Meaning into the screen. We start off 
by drawing the top right point of the top of the cube. The top right 
point would be one unit right, and one unit into the screen. The second 
point would be one unit to the left, and unit into the screen. Now we 
have to draw the bottom of the quad towards the viewer. so to do this, 
instead of going into the screen, we move one unit towards the screen. 
Make sense?</p>
<div><div id="highlighter_428933" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">glColor3f(0.0f,1.0f,0.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Set The Color To Green</code></div><div class="line number2 index1 alt1"><code class="cpp plain">glVertex3f( 1.0f, 1.0f,-1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Top Right Of The Quad (Top)</code></div><div class="line number3 index2 alt2"><code class="cpp plain">glVertex3f(-1.0f, 1.0f,-1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Top Left Of The Quad (Top)</code></div><div class="line number4 index3 alt1"><code class="cpp plain">glVertex3f(-1.0f, 1.0f, 1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Bottom Left Of The Quad (Top)</code></div><div class="line number5 index4 alt2"><code class="cpp plain">glVertex3f( 1.0f, 1.0f, 1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Bottom Right Of The Quad (Top)</code></div></div></td></tr></tbody></table></div></div>
<p>The bottom is drawn the exact same way as the top, but because it's 
the bottom, it's drawn down one unit from the center of the cube. Notice
 the Y axis is always minus one. If we were under the cube, looking at 
the quad that makes the bottom, you would notice the top right corner is
 the corner closest to the viewer, so instead of drawing in the distance
 first, we draw closest to the viewer first, then on the left side 
closest to the viewer, and then we go into the screen to draw the bottom
 two points.</p>
<p>If you didn't really care about the order the polygons were drawn in 
(clockwise or not), you could just copy the same code for the top quad, 
move it down on the Y axis to -1, and it would work, but ignoring the 
order the quad is drawn in can cause weird results once you get into 
fancy things such as texture mapping.</p>
<div><div id="highlighter_173264" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">glColor3f(1.0f,0.5f,0.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Set The Color To Orange</code></div><div class="line number2 index1 alt1"><code class="cpp plain">glVertex3f( 1.0f,-1.0f, 1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Top Right Of The Quad (Bottom)</code></div><div class="line number3 index2 alt2"><code class="cpp plain">glVertex3f(-1.0f,-1.0f, 1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Top Left Of The Quad (Bottom)</code></div><div class="line number4 index3 alt1"><code class="cpp plain">glVertex3f(-1.0f,-1.0f,-1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Bottom Left Of The Quad (Bottom)</code></div><div class="line number5 index4 alt2"><code class="cpp plain">glVertex3f( 1.0f,-1.0f,-1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Bottom Right Of The Quad (Bottom)</code></div></div></td></tr></tbody></table></div></div>
<p>Now we draw the front of the Quad. We move one unit towards the 
screen, and away from the center to draw the front face. Notice the Z 
axis is always one. In the pyramid the Z axis was not always one. At the
 top, the Z axis was zero. If you tried changing the Z axis to zero in 
the following code, you'd notice that the corner you changed it on would
 slope into the screen. That's not something we want to do right now :)</p>
<div><div id="highlighter_719937" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">glColor3f(1.0f,0.0f,0.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Set The Color To Red</code></div><div class="line number2 index1 alt1"><code class="cpp plain">glVertex3f( 1.0f, 1.0f, 1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Top Right Of The Quad (Front)</code></div><div class="line number3 index2 alt2"><code class="cpp plain">glVertex3f(-1.0f, 1.0f, 1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Top Left Of The Quad (Front)</code></div><div class="line number4 index3 alt1"><code class="cpp plain">glVertex3f(-1.0f,-1.0f, 1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Bottom Left Of The Quad (Front)</code></div><div class="line number5 index4 alt2"><code class="cpp plain">glVertex3f( 1.0f,-1.0f, 1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Bottom Right Of The Quad (Front)</code></div></div></td></tr></tbody></table></div></div>
<p>The back face is a quad the same as the front face, but it's set 
deeper into the screen. Notice the Z axis is now minus one for all of 
the points.</p>
<div><div id="highlighter_858104" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">glColor3f(1.0f,1.0f,0.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Set The Color To Yellow</code></div><div class="line number2 index1 alt1"><code class="cpp plain">glVertex3f( 1.0f,-1.0f,-1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Bottom Left Of The Quad (Back)</code></div><div class="line number3 index2 alt2"><code class="cpp plain">glVertex3f(-1.0f,-1.0f,-1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Bottom Right Of The Quad (Back)</code></div><div class="line number4 index3 alt1"><code class="cpp plain">glVertex3f(-1.0f, 1.0f,-1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Top Right Of The Quad (Back)</code></div><div class="line number5 index4 alt2"><code class="cpp plain">glVertex3f( 1.0f, 1.0f,-1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Top Left Of The Quad (Back)</code></div></div></td></tr></tbody></table></div></div>
<p>Now we only have two more quads to draw and we're done. As usual, 
you'll notice one axis is always the same for all the points. In this 
case the X axis is always minus one. That's because we're always drawing
 to the left of center because this is the left face.</p>
<div><div id="highlighter_890848" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">glColor3f(0.0f,0.0f,1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Set The Color To Blue</code></div><div class="line number2 index1 alt1"><code class="cpp plain">glVertex3f(-1.0f, 1.0f, 1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Top Right Of The Quad (Left)</code></div><div class="line number3 index2 alt2"><code class="cpp plain">glVertex3f(-1.0f, 1.0f,-1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Top Left Of The Quad (Left)</code></div><div class="line number4 index3 alt1"><code class="cpp plain">glVertex3f(-1.0f,-1.0f,-1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Bottom Left Of The Quad (Left)</code></div><div class="line number5 index4 alt2"><code class="cpp plain">glVertex3f(-1.0f,-1.0f, 1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Bottom Right Of The Quad (Left)</code></div></div></td></tr></tbody></table></div></div>
<p>This is the last face to complete the cube. The X axis is always one.
 Drawing is counter clockwise. If you wanted to, you could leave this 
face out, and make a box :)</p>
<p>Or if you felt like experimenting, you could always try changing the 
color of each point on the cube to make it blend the same way the 
pyramid blends. You can see an example of a blended cube by downloading 
Evil's first GL demo from my web page. Run it and press TAB. You'll see a
 beautifully colored cube, with colors flowing across all the faces.</p>
<div><div id="highlighter_317469" class="syntaxhighlighter  cpp"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">glColor3f(1.0f,0.0f,1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Set The Color To Violet</code></div><div class="line number2 index1 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">glVertex3f( 1.0f, 1.0f,-1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Top Right Of The Quad (Right)</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">glVertex3f( 1.0f, 1.0f, 1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Top Left Of The Quad (Right)</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">glVertex3f( 1.0f,-1.0f, 1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Bottom Left Of The Quad (Right)</code></div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">glVertex3f( 1.0f,-1.0f,-1.0f);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// Bottom Right Of The Quad (Right)</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">glEnd();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 </code><code class="cpp comments">// Done Drawing The Quad</code></div><div class="line number7 index6 alt2">&nbsp;</div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">rtri+=0.2f;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 </code><code class="cpp comments">// Increase The Rotation Variable For The Triangle </code></div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">rquad-=0.15f;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 </code><code class="cpp comments">// Decrease The Rotation Variable For The Quad </code></div><div class="line number10 index9 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">TRUE;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 </code><code class="cpp comments">// Keep Going</code></div><div class="line number11 index10 alt2"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>By the end of this tutorial, you should have a better understanding 
of how objects are created in 3D space. You have to think of the OpenGL 
screen as a giant piece of graph paper, with many transparent layers 
behind it. Almost like a giant cube made of of points. Some of the 
points move left to right, some move up and down, and some move further 
back in the cube. If you can visualize the depth into the screen, you 
shouldn't have any problems designing new 3D objects.</p>
<p>If you're having a hard time understanding 3D space, don't get 
frustrated. It can be difficult to grasp right off the start. An object 
like the cube is a good example to learn from. If you notice, the back 
face is drawn exactly the same as the front face, it's just further into
 the screen. Play around with the code, and if you just can't grasp it, 
email me, and I'll try to answer your questions.</p>
<p><strong>Jeff Molofee</strong> (<strong>NeHe</strong>)</p>
<p>* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/vc/lesson05.zip">Visual C++</a> Code For This Lesson.</p>
<p>* DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/asm/lesson05.zip">ASM</a> Code For This Lesson. ( Conversion by <a href="mailto:foolman@bigfoot.com">Foolman</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/bcb6/lesson05_bcb6.zip">Borland C++ Builder 6</a> Code For This Lesson. ( Conversion by <a href="mailto:christian@tugzip.com">Christian Kindahl</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/c_sharp/lesson05.zip">C#</a> Code For This Lesson. ( Conversion by <a href="mailto:sugarbee@gmx.net">Sabine Felsinger</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/csgl/lesson05.zip">VB.Net CsGL</a> Code For This Lesson. ( Conversion by <a href="mailto:createdbyx@yahoo.com">X</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/cwarrior/lesson05.zip">Code Warrior 5.3</a> Code For This Lesson. ( Conversion by <a href="mailto:DelusionalBeing@hotmail.com">Scott Lupton</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/cygwin/lesson05.tar.gz">Cygwin</a> Code For This Lesson. ( Conversion by <a href="mailto:stephan@lazyfellow.com">Stephan Ferraro</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/d/lesson05.zip">D Language</a> Code For This Lesson. ( Conversion by <a href="mailto:gpineda2013@yahoo.com.mx">Familia Pineda Garcia</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/delphi/lesson05.zip">Delphi</a> Code For This Lesson. ( Conversion by <a href="mailto:michal_praha@seznam.cz">Michal Tucek</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/devc/lesson05.zip">Dev C++</a> Code For This Lesson. ( Conversion by <a href="mailto:danprogram@hotmail.com">Dan</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/euphoria/lesson05.zip">Euphoria</a> Code For This Lesson. ( Conversion by <a href="mailto:1evan@sbcglobal.net">Evan Marshall</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/game/data/lessons/glut/lesson05.zip">Game GLUT</a> Code For This Lesson. ( Conversion by <a href="mailto:milix_gr@hotmail.com">Milikas Anastasios</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/glut/lesson05.zip">GLUT</a> Code For This Lesson. ( Conversion by <a href="mailto:lordrustad@hotmail.com">Andy Restad</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/irix/lesson05.zip">Irix</a> Code For This Lesson. ( Conversion by <a href="mailto:lakmal@gunasekara.de">Lakmal Gunasekara</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/java/lesson05.zip">Java</a> Code For This Lesson. ( Conversion by <a href="mailto:jeff@consunet.com.au">Jeff Kirby</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/java_swt/lesson05.zip">Java/SWT</a> Code For This Lesson. ( Conversion by <a href="mailto:victor@parasoft.com">Victor Gonzalez</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/jedisdl/lesson05.zip">Jedi-SDL</a> Code For This Lesson. ( Conversion by <a href="mailto:Dominique@SavageSoftware.com.au">Dominique Louis</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/jogl/lesson05.jar">JoGL</a> Code For This Lesson. ( Conversion by <a href="mailto:jattier@hotmail.com">Kevin J. Duling</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/lccwin32/lccwin32_lesson05.zip">LCC Win32</a> Code For This Lesson. ( Conversion by <a href="mailto:rwishlaw@shaw.ca">Robert Wishlaw</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/linux/lesson05.tar.gz">Linux</a> Code For This Lesson. ( Conversion by <a href="mailto:ulmont@bellsouth.net">Richard Campbell</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/linuxglx/lesson05.tar.gz">Linux/GLX</a> Code For This Lesson. ( Conversion by <a href="mailto:Mihael.Vrbanec@stud.uni-karlsruhe.de">Mihael Vrbanec</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/linuxsdl/lesson05.tar.gz">Linux/SDL</a> Code For This Lesson. ( Conversion by <a href="mailto:leggett@eecs.tulane.edu">Ti Leggett</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/lwjgl/lesson05.jar">LWJGL</a> Code For This Lesson. ( Conversion by <a href="mailto:mark.bernard@rogers.com">Mark Bernard</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/mac/lesson05.sit">Mac OS</a> Code For This Lesson. ( Conversion by <a href="mailto:asp@usc.edu">Anthony Parker</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/macosxcocoa/lesson05.zip">Mac OS X/Cocoa</a> Code For This Lesson. ( Conversion by <a href="mailto:blb@pobox.com">Bryan Blackburn</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/m/data/lessons/asm/lesson05.zip">MASM</a> Code For This Lesson. ( Conversion by <a href="mailto:scalp@bigfoot.com">Nico (Scalp)</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/pbasic/lesson05.zip">Power Basic</a> Code For This Lesson. ( Conversion by <a href="mailto:anguslaw@net.ntl.com">Angus Law</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/pelles_c/lesson05.zip">Pelles C</a> Code For This Lesson. ( Conversion by <a href="mailto:pelle@smorgasbordet.com">Pelle Orinius</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/perl/lesson05.zip">Perl</a> Code For This Lesson. ( Conversion by <a href="mailto:cahhmc@yahoo.com">Cora Hussey</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/python/lesson05.tar.gz">Python</a> Code For This Lesson. ( Conversion by <a href="mailto:acolston@midsouth.rr.com">Tony Colston</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/realbasic/RBlesson05.zip">REALbasic</a> Code For This Lesson. ( Conversion by <a href="mailto:mauitom@maui.net">Thomas J. Cunningham</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/ruby/lesson05.zip">Ruby</a> Code For This Lesson. ( Conversion by Manolo Padron Martinez )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/scheme/lesson05.zip">Scheme</a> Code For This Lesson. ( Conversion by <a href="mailto:bcj1980@sbcglobal.net">Jon DuBois</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/solaris/lesson05.zip">Solaris</a> Code For This Lesson. ( Conversion by <a href="mailto:lakmal@gunasekara.de">Lakmal Gunasekara</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/vb/lesson05.zip">Visual Basic</a> Code For This Lesson. ( Conversion by <a href="mailto:rosscogl@email.com">Ross Dawson</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/vfortran/lesson05.zip">Visual Fortran</a> Code For This Lesson. ( Conversion by <a href="mailto:Jean-Philippe.Perois@wanadoo.fr">Jean-Philippe Perois</a> )<br> * DOWNLOAD <a href="http://nehe.gamedev.net/data/lessons/vs_net/lesson05.zip">Visual Studio .NET</a> Code For This Lesson. ( Conversion by <a href="mailto:ultimatezeus@hotmail.com">Grant James</a> )</p>
<p>&nbsp;</p>
<p><strong><span><a href="http://nehe.gamedev.net/data/lessons/lesson.asp?lesson=04">&lt; Lesson 04</a></span></strong><strong><span><a href="http://nehe.gamedev.net/data/lessons/lesson.asp?lesson=06">Lesson 06 &gt;</a></span></strong></p>


</div>



            <div style="width:728px;padding:0px;margin:auto; margin-top: 10px;">
                <script type="text/javascript">GA_googleFillSlot("Leaderboard_NeHe");</script><script src="05%20NeHe%20Productions%20%203D%20Shapes_files/ads_002"></script><div id="google_ads_div_Leaderboard_NeHe_ad_container">
<ins style="width: 728px; height: 90px; display: inline-table; position: relative; border: 0pt none;"><ins style="width: 728px; height: 90px; display: block; position: relative; border: 0pt none;"><iframe style="border: 0pt none; position: absolute; top: 0pt; left: 0pt;" marginheight="0" marginwidth="0" name="google_ads_iframe_Leaderboard_NeHe" id="google_ads_iframe_Leaderboard_NeHe" frameborder="0" height="90" scrolling="no" width="728"></iframe></ins></ins></div>
<script>GA_googleCreateDomIframe("google_ads_div_Leaderboard_NeHe_ad_container" ,"Leaderboard_NeHe");</script>
            </div>              
        </td>
        <td class="col2">
            




<div style="text-align: center; padding:10px;">


<script type="text/javascript">
    GA_googleFillSlot("Skyscraper_NeHe");
</script><script src="05%20NeHe%20Productions%20%203D%20Shapes_files/ads"></script><div id="google_ads_div_Skyscraper_NeHe_ad_container"><script language="javascript"><!--
document.write('<scr'+'ipt language="javascript1.1" src="http://helios.gamerdna.com/addyn/3.0/5223/1352698/0/154/ADTECH;loc=100;target=_blank;key=key1+key2+key3+key4;grp=[group];misc='+new Date().getTime()+'"></scri'+'pt>');
//-->
</script><script language="javascript1.1" src="05%20NeHe%20Productions%20%203D%20Shapes_files/ADTECH.js"></script>
<script language="JavaScript" type="text/javascript" src="05%20NeHe%20Productions%20%203D%20Shapes_files/23854-9.js"></script><iframe framespacing="0" src="05%20NeHe%20Productions%20%203D%20Shapes_files/slot5267.htm" frameborder="no" height="600" scrolling="no" width="160"></iframe><img src="05%20NeHe%20Productions%20%203D%20Shapes_files/p-e4m3Yko6bFYVc.gif" style="display: none;" alt="Quantcast" border="0" height="1" width="1"><script defer="defer" type="text/javascript">
{
	if (Math.floor(Math.random()*100) < 1)
	{
		var url;
		var iframe = (window != top);
		url = "http://tap.rubiconproject.com/stats/iframes?pc=8030/12966&ptc=23854&upn="+iframe;
		setTimeout(function(){ new Image().src = url }, 1000);
	}
}
</script>
<img src="05%20NeHe%20Productions%20%203D%20Shapes_files/fp.gif" style="display: none;" alt="" border="0" height="1" width="1"><div style="height:0px; width:0px; overflow:hidden"><iframe src="05%20NeHe%20Productions%20%203D%20Shapes_files/emily.htm" marginwidth="0" marginheight="0" style="height: 0px; width: 0px;" frameborder="0" height="0" scrolling="NO" width="0"></iframe></div><noscript>
<a href="http://helios.gamerdna.com/adlink/5223/1352698/0/154/AdId=883038;BnId=1;itime=10833830;key=key1+key2+key3+key4;nodecode=yes;link=http://optimized-by.rubiconproject.com/t/8030/12966/23854-9.1"><img src="http://optimized-by.rubiconproject.com/a/8030/12966/23854-9.img" width="160" height="600" border="0"></a>
</noscript>
<noscript><a href="http://helios.gamerdna.com/adlink/3.0/5223/1352698/0/154/ADTECH;loc=300;key=key1+key2+key3+key4;grp=[group]" target="_blank"><img src="http://helios.gamerdna.com/adserv/3.0/5223/1352698/0/154/ADTECH;loc=300;key=key1+key2+key3+key4;grp=[group]" border="0" width="160" height="600"></a></noscript>
</div>


</div>

        </td>
    </tr></tbody></table>
    <div id="footer">
        <p>
			© 1997-2011 <a href="http://www.gamedev.net/">Gamedev.net</a>. All rights reserved.<br>
			NeHe TM and NeHe ProductionsTM are trademarks of GameDev.net, LLC<br>
			OpenGL® is a registered trademark of Silicon Graphics Inc.<br>
		</p>        
    </div>

    
	    <script type="text/javascript" src="05%20NeHe%20Productions%20%203D%20Shapes_files/shCore.js"></script>
        <script type="text/javascript" src="05%20NeHe%20Productions%20%203D%20Shapes_files/shBrushCpp.js"></script>
	    <script type="text/javascript" src="05%20NeHe%20Productions%20%203D%20Shapes_files/shBrushJScript.js"></script>
	    <script type="text/javascript">SyntaxHighlighter.all();</script>
    
    
<!-- GoogleAnalytics code -->
<script src="05%20NeHe%20Productions%20%203D%20Shapes_files/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-279474-2"; // Gamedev
urchinTracker();
_uff = 0; // Reset for second account
_uacct = "UA-24180731-1"; // Non-GD
urchinTracker();
</script> 
  

</body></html>